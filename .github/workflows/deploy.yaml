name: Deploy Gitea

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Azure Login
      run: |
        export ARM_CLIENT_ID="${{ secrets.ARM_CLIENT_ID }}"
        export ARM_CLIENT_SECRET="${{ secrets.CLIENT_SECRET }}"
        export ARM_SUBSCRIPTION_ID="${{ secrets.ARM_SUBSCRIPTION_ID }}"
        export ARM_TENANT_ID="${{ secrets.ARM_TENANT_ID }}"
        az login --service-principal -u $ARM_CLIENT_ID -p $ARM_CLIENT_SECRET --tenant $ARM_TENANT_ID

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Create SSH directory if not exists
      run: mkdir -p $HOME/.ssh

    - name: Set up SSH key
      run: |
        echo "${{ secrets.SSH_PUBLIC_KEY }}" > $HOME/.ssh/gitea.pub
      shell: bash

    - name: Terraform Init
      run: terraform init -backend-config="token=${{ secrets.TF_API_TOKEN }}"
      working-directory: terraform 
    
    - name: Download Terraform state
      run: |
        cd terraform
        curl -o terraform.tfstate "https://app.terraform.io/api/state-versions/sv-7sBiFz9dSuyYtQof/hosted_state"
      if: always()

    - name: Apply Terraform configuration
      env:
        ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
        ARM_CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      run: terraform apply -auto-approve -state=sv-7sBiFz9dSuyYtQof.tfstate
      working-directory: terraform